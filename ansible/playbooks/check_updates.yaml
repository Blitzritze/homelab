- name: Search for available updates
  hosts: all
  vars_files:
    - /etc/ansible/vault/secret.yaml
  become: true
  tasks:
    - name: Update package cache
      block:
        - name: Update package cache (for Debian/Ubuntu)
          apt:
            update_cache: yes
          when: ansible_distribution in ['Debian', 'Ubuntu']

        - name: Update package cache (for Alpine)
          community.general.apk:
            update_cache: true
          when: ansible_distribution == 'Alpine'
      when: ansible_distribution in ['Debian', 'Ubuntu', 'Alpine']

    - name: Check for new updates
      block:
        - name: Check for new updates (for Debian/Ubuntu)
          command: "apt list --upgradable"
          register: updates_raw
          when: ansible_distribution in ['Debian', 'Ubuntu']

        - name: Check for new updates (for Alpine)
          command: "apk -u list"
          register: packages
          when: ansible_distribution == 'Alpine'
      when: ansible_distribution in ['Debian', 'Ubuntu', 'Alpine']

    - name: Set variable for updates (for Debian/Ubuntu)
      set_fact:
        updates: "{{ updates_raw.stdout_lines | reject('search', '^Listing...') | list }}"
      when: ansible_distribution in ['Debian', 'Ubuntu']

    - name: Send message to Gotify if updates are available
      uri:
        url: "http://192.168.178.74:3004/message?token={{ gotify_key }}"
        method: POST
        body_format: form-urlencoded
        body: "title={{ inventory_hostname }}&message={{ packages.stdout_lines | join('\n') if ansible_distribution == 'Alpine' else updates | default([]) | join('\n') }}&priority=5"
      when: (ansible_distribution in ['Debian', 'Ubuntu'] and updates | length > 0) or (ansible_distribution == 'Alpine' and packages.stdout_lines | length > 0)
